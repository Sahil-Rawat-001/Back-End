What is API ?

An Application Programming Interface (API) is a contract that allows code to talk to other code. APIs are the building blocks of modern software because they allow for sharing of resources and services across applications, organizations, and devices.


Why are API's Important ?

1. APIs help developers integrate exciting features and build automation without reinventing the wheel
   ex: using a Weather API instead of launching your weather balloons

2.APIs allow enterprises to open up their product for faster innovation
   ex: apps that interact with Twitter or Meta APIs by posting on your behalf or reading tweets

3.APIs can be products themselves
   ex: Software as a Service (SaaS) products like Stripe's payment APIs or Twilio's text messaging and email APIs



Networking term	Description	                                                    Restaurant analogy

Client	                 The requester. Ex: browser, web app, mobile app	Customer

API	                 Simplified interface for interacting with the backend	Waiter

Server	                 The backend where the processing happens                   Kitchen



 Types of API's


1.Hardware APIs
   Interface for software to talk to hardware. 
   Example: How your phone's camera talks to the operating system. 

2.Software Library APIs
   Interface for directly consuming code from another code base.
   Example: Using methods from a library you import into your application.

3.Web APIs
   Interface for communicating across code bases over a network. 
   Example: Fetching current stock prices from a finance API over the internet.




When we make an HTTP call to a server, we specify a request method that indicates the type of operation we are about to perform. These are also called HTTP verbs.



Method name	Operation

GET	                 Retrieve data (Read)
POST	                 Send data (Create)
PUT/PATCH	Update data (Update)  * PUT usually replaces an entire resource, whereas PATCH usually is for partial updates
DELETE              	Delete data (Delete)




Request URL

In addition to a request method, a request must include a request URL that indicates where to make the API call. A request URL has three parts: a protocol (such as http:// or https://), host (location of the server), and path (route on the server). In REST APIs, the path often points to a reference entity,


Paths and complete URLs are also sometimes called API endpoints.



Status Code

Code range	Meaning	  Example
2xx	                 Success	  200 - OK
                                                      201 - Created
                                                      204 - No content (silent OK)

3xx	Redirection	301 - Moved (path changed)

4xx	Client error	400 - Bad request
                                                    401 - Unauthorized
                                                    403 - Not Permitted
                                                    404 - Not Found

5xx	Server error	500 - Internal server error
                                                    502 - Bad gateway
                                                    504 - Gateway timeout



The client is the agent making a request. A client could be a browser or an application you have coded.

The request is sent over a network to some server. In our case, we made a request over the public internet to a server located at the address https://library-api.postmanlabs.com. 

The server interpreted the request (GET /books) and sent the appropriate response over the network back to the Postman client: a list of books.













